generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  nickName  String     @unique
  bio       String?
  email     String     @unique
  avatarUrl String?
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  posts     Post[]
  Like      Like[]
  followers Follower[] @relation("UserFollowers")
  following Follower[] @relation("UserFollowing")
  Comment   Comment[]
}

model Follower {
  id          String   @id @default(uuid())
  followerId  String
  followingId String
  follower    User     @relation("UserFollowers", fields: [followerId], references: [id], onDelete: Cascade)
  following   User     @relation("UserFollowing", fields: [followingId], references: [id], onDelete: Cascade)
  status      Status   @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([followerId, followingId])
}

enum Status {
  PENDING
  ACCEPTED
  DECLINED
}

model Post {
  id        String    @id @default(uuid())
  content   String
  mediaUrl  String?
  userId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Like      Like[]
  Comment   Comment[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  userId    String
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Like {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime @default(now())

  @@unique([userId, postId])
}
